// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id
  name     String
  orders   Order[]
  products Product[]
  reviews  Review[]
  storeId  Int?
  Store    Store?    @relation(fields: [storeId], references: [id])
}

model Store {
  id           Int       @id @default(autoincrement())
  name         String
  email        String
  phone        String
  profileImage String?
  coverImage   String?
  description  String
  products     Product[]
  users        User[]
}

model Product {
  id         Int            @id @default(autoincrement())
  title      String
  price      Float
  desc       String         @default("This is the description of the product")
  image      String         @default("https://www.freshone.com.pk/content/images/thumbs/default-image_550.png")
  categoryId Int?
  category   Category?      @relation(fields: [categoryId], references: [id])
  stock      Int            @default(100)
  userId     String
  user       User           @relation(fields: [userId], references: [id])
  reviews    Review[]
  Store      Store          @relation(fields: [storeId], references: [id])
  storeId    Int
  orders     ProductOrder[]
}

model Order {
  id        Int            @id @default(autoincrement())
  userId    String
  user      User           @relation(fields: [userId], references: [id])
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  status    String         @default("Pending")
  products  ProductOrder[]
  tax       Float          @default(0.0)
  shipping  Float          @default(0.0)
  total     Float          @default(0.0)
  address   String
  city      String
  country   String
  zip       String
  state     String
}

model ProductOrder {
  id        Int     @id @default(autoincrement())
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  quantity  Int
  price     Float
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Review {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  rating    Int
  comment   String
  createdAt DateTime @default(now())
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  phone     String?
  createdAt DateTime @default(now())
}
